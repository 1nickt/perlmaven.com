use Rex -feature => [qw( 1.4 exec_autodie)];

# Plan:
# Setup Apache
# Add a simple CGI script written in Perl using CGI.pm (maybe even one parsing $ENV{QUERY_STRING}
# Convert the script to use PSGI and run it as CGI
# Set up Starman to run the PSGI without the CGI
# Map Apache to be able to serve from Starman as well.

group all => qw(206.189.239.162);
user 'root';

desc 'Just printing hostname';
task 'print_hostname', sub {
    say run('hostname');
};

desc 'Install Apache';
task install_apache => sub {
    update_package_db;
    pkg 'apache2', ensure => 'present';
    service 'apache2', ensure => 'started';
};

desc 'Setup Apache';
task setup_apache => sub {
    # mkdir
    file '/var/cgi-bin', ensure => 'directory';

    #copy file, set mode
    file '/var/cgi-bin/app.cgi',
        source => 'files/var/cgi-bin/app.cgi',
        mode => '0755';

    # install  CGI.pm
    for my $pkg (qw(libcgi-pm-perl)) {
        pkg $pkg, ensure => 'present';
    }

    # Verify that we can run /var/cgi-bin/app.cgi
    eval {
        my $out = run('/var/cgi-bin/app.cgi');
        die "Wrong output $out" if index($out, 'Content-Type: text/html; charset=utf8') < 0;
    };
    die "Could not run CGI script on the command line $@" if $@;


    file '/etc/apache2/sites-enabled/000-default.conf', ensure => 'absent';
    file '/etc/apache2/sites-enabled/apache.conf',
        source => 'files/etc/apache2/sites-enabled/apache.conf';

    run('a2enmod cgid');

    service 'apache2' => 'restart';

    do_task('verify_application');
};

task verify_application => sub {
    use LWP::UserAgent;
    my $ua = LWP::UserAgent->new;
    my $server = connection->server;
    my $res = $ua->get("http://$server/cgi-bin/app.cgi?name=Foo");
    my $html = $res->decoded_content;
    die "Wrong output '$html'" if $html ne "Hello Foo\n";
};

# vim: syntax=perl
