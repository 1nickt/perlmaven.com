=title Dave Rolsky, author of DateTime and tons of other modules
=timestamp 2013-05-02T17:33:01
=indexes DateTime, interview, Dave Rolsky
=status show
=showright 1
=newsletter 0
=published 0
=author 0
=index 1
=archive 1
=feed 1
=comments 1
=social 1

=abstract start

What does a vegan music composer do when he wants to send e-mails?

Dave Rolsky is one of the most prolific CPAN authors. He created DateTime, Log::Dispatch and tons of other modules.
We talked about how he started with Perl and what he has been doing lately. We also discussed his work and
the Moose training he runs at YAPC::NA. (19:19)

=abstract end

<iframe width="640" height="360" src="http://www.youtube.com/embed/d-K_uoIrUKQ" frameborder="0" allowfullscreen></iframe>

=timings start

[2013-05-03 Fri 04:00]--[2013-05-03 Fri 04:45]: First pass 0:00--3:00

[2013-05-03 Fri 06:00]

=timings end

=transcription start

GS: Hi, this is GS speaking.  This is the perlmavin tv show again, and with me is DR, who is the author of Date::Time and tons of other modules on CPAN.  He is also the author of the, or of at least a large part of the Moose tutorial and documentation.  Hi Dave.  How are you?

DR: Hi.  I am good how about you?

GS: I am fine.  Still a bit nervous about this tv interviews, but hopefully I get over all this 

DR: What could go wrong with technology.  Hey were progrqammers, we know it always works, it's perfect, so...

GS: I can tell you in one of my previous interviews, the aspect retio of the camera of the other side was changing, so you can see that his head was going up and down.  Very interesting.

DR: Very psychadelic.

GS: Yeah.  Anyway.  So.  [1:00] Welcome to the show, and I would like to start with you from the beginning, becuase you have these tons of modules on CPAN, but where do we start?  How did you get involved in Perl.

DR: [1:13] Ok, sure.  So, back in '95/'96, I think, I was in grad school for music composition, that's what my degree is in, and I was, at the time I had recently met Matt Mackall, who people might recognize as the author of Mercurial, and he's also done Linux development, so I knew him back, way back then, actually through a local vegetarian group, and I wanted to write a web app for the composers at my school to list all of our pieces, so that performers could find what we had written and may be sort, and you know, "I want to find something that includes claranet" or something like that, [2:00] and so I had done a little programming when I was a kid -- I got my first computer when I was young, 5 or 6, so I asked Matt, "what should I learn to do this?  What's the right language?"  So he pointed me at Perl. [2:15] I think I got a Perl book sometime when I was in grad school.  This app never materialized.  It was a good idea, but it didn't happen, like many projects, right?  So this should be familiar to everybody [2:24] watching this: "Projects You Never Did".  That got me started looking at perl, which is very ironic, since Matt is totally a Python guy these days, anyway.

GS: [2:35] Back then everyone was perl.

DR: [2:37] Exactly, exactly.  When I graduated from the masters program, I was kindof burned out on the whole academic thing, and so I decided to not get a PhD, so I end up getting a job in support at a local insurance company in St. Paul.  I lived in Minneapolis, Minnesota.  [3:00]  And therre was kindof downtime.  When things weren't crashing, there was free time, because we weren't like a support line for Dell, it was just for the company, so if things there were working, we had time.  So I kindof taught myself more programming there, and I was actually working on another project that I never finished, which was a web UI for MajorDomo, if anybody remembers MajorDomo.

GS: People still use it.

DR: Oh wow.  Oh my God.  Ok.  So I learned more of Perl there, and then eventually after about 15 months of that job, I got my first programming job, this was during the first dot-com boom, when anybody with a, I'll be polite, a butt, could get a seat, because that's all you needed was a butt to put in the seat to be a programmer, [3:50] so I had no idea what te heck I was doing, but I managed to get a programming job.  And it was a Perl place, and so that was kindof where it all started.  And actually, that job I met Ken Williams, who is the person who introduced me to Mason, and we eventually wrote the Mason book together, and he introduced me to more of the Perl comunity stuff, [4:10] pushed me to put stuff on CPAN, told me about YAPC, things like that.  So that's where it really got started.  

GS: [4:16] Great.  So you started, you started to lear Perl, you had this, you were involed in a lot of projects, right?  I mean, if you look at the CPAN directory, then you see all kinds of diverse things.

DR: [4:33] Yeah, I've done... I think the first thing I uploaded was
someting that's kindof a predecessor to Log::Dispatch.  It was like a
logging module I had written for the company I was working at, and I
got permission to release it, and it was really teriible, but I
uploaded that, and then [4:49] I think I wrote, I actually wrote a
small bug tracking system for our support team, and I had done my own
templating system, I think for that, I don't know, this was so long
ago.  And then Ken was like "You should look at Mason".  So then I
started using Mason, and then I started contributing to Mason, [5:05]
So, I mean, for some of the things I worked on its projects that other
people have started, probably most notably Mason and Moose, where I
got excited about the project, and, you know, [5:19] if it doesn't
work the way I want it, then patches welcome, and I am kindof a sucker
for that, so I end up doing the patches, and then working on docs, and
all of these other things, [5:29] and then for other stuff, I mean I
have lots of stuff I have uploaded to CPAN that I don't think anybody
has ever used, including me.  There is stuff that is up there that is
just experimental, or that's long abandoned. [5:39] so even though I
have tons of CPAN modules, I suspect maybe, I don't know, 25% of them,
35% of them see any use, but some of them are used pretty hevuly.  So
it's kinda...

GS: [5;50] Yeah, I think I mean, it's like a trademark.  If I know
that you wrote it, then I know that then it's "it's ok".  Maybe I
shouldn't trust everything that you wrote.

DR: [5:59] (laugh) I sure wouldn't trust everything!  I'm embarassed
by my old code.  I look at Log::Dispatch, which is one of the earliest
ones, and I know lots of people use it, and I still use it, but
whenever I have to hack on it, I'm like "Ugh, not this again".

GS: Oh, you don't like it anymore.

DR: Someday I'll just [6;13] [garbled] use Moo or something.

GS: [6;17]

=transcription end

<div id="text">
<h2>Show notes</h2>
<ul>
  <li><a href="http://blog.urth.org/">House Absolute(ly) Pointless</a>, Dave,s blog.</li>
  <li><a href="http://www.houseabsolute.com/">House Absolute Consulting</a></li>
  <li><a href="http://www.linkedin.com/in/kenahoo">Ken Williams</a>, <a href="http://www.masonhq.com/">Mason</a>, <a href="http://www.masonbook.com/">Mason book</a></li>
  <li><a href="http://mercurial.selenic.com/">Mercurial VCS</a></li>
  <li><a href="http://twitter.com/mpmselenic">Matt Mackall</a></li>
  <li><a href="http://en.wikipedia.org/wiki/Majordomo">Majordomo</a></li>
  <li><a href="http://irc.perl.org/">IRC</a>    Check the #moose channel. Dave is known as <i>autarch</i> on IRC.</li>
  <li><a href="http://rt.cpan.org/">Bug reports in RT</a></li>
  <li><a href="http://www.exploreveg.org">Compassionate Action for Animals</a></li>
  <li><a href="http://2013.tcvegfest.com/">Twin Cities Veg Fest</a> where Dave is the lead organizer.</li>
  <li><a href="http://datetime.perl.org/">DateTime</a></li>
</ul>

Dave works for <a href="http://www.maxmind.com/">MaxMind</a>, a Perl shop that provides GeoIP databases, web services and fraud detection.
Dave works with <a href="https://metacpan.org/author/OALDERS">Olaf Alders</a>, one of the people behind <a href="http://metacpan.org/">MetaCPAN</a>.

<h2>CPAN modules</h2>
<ul>
  <li><a href="http://metacpan.org/author/DROLSKY">Dave Rolsky on CPAN</a></li>
  <li><a href="http://metacpan.org/module/Log::Dispatch">Log::Dispatch</a></li>
  <li><a href="http://metacpan.org/module/Moose">Moose</a></li>
  <li><a href="http://metacpan.org/module/Courriel">Courriel</a>, a modern email parsing and building library.</li>
  <li><a href="http://metacpan.org/module/Pg::CLI">Pg::CLI</a> for calling PostgreSQL command line programs.</li>
  <li><a href="http://metacpan.org/module/Specio">Specio</a> is an attempt to replace the built-in type system for Moose, and to provide something that works with Moo as well as stand-alone.</li>
</ul>

<h2>Moose training at YAPC::NA 2013</h2>
<ul>
  <li><a href="http://www.yapcna.org/yn2013/training.html#moose1">Intro to Moose training at YAPC::NA</a></li>
  <li><a href="http://www.yapcna.org/yn2013/training.html#moose2">Advanced Moose by Stevan Littleat YAPC::NA</a></li>
</ul>
</div>






