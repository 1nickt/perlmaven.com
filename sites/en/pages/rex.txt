=title Rex
=timestamp 2021-02-17T08:30:01
=indexes Rex
=status show
=author szabgab
=archive 1
=comments_disqus_enable 0
=show_related 1

=abstract start

<a href="https://www.rexify.org/">Rex</a> is an automation framework written in Perl. Here are a few commands I learned recently.

=abstract end

Give 3 servers s1.perlmaven.com, s2.perlmaven.com, and s3.perlmaven.com

<code>
rex -H s1.perlmaven.com -e 'say for run q(uptime)'
rex -H 's1.perlmaven.com s2.perlmaven.com s3.perlmaven.com' -e 'say for run q(uptime)'
rex -H 's[1,2,3].perlmaven.com' -e 'say for run q(uptime)'
rex -H 's[1..3].perlmaven.com' -e 'say for run q(uptime)'
rex -H 's[1..3].perlmaven.com' -e 'my $out = run q(uptime);  say scalar reverse $out'
rex -H 's[1..3].perlamven.com' -e 'say for run q(df -h)'
</code>

Given just IP addresses

<code>
rex -u root -H '104.248.57.39 104.248.53.65' -e 'say for run q(hostname)'
</code>


I could also edit <b>vim ~/.ssh/config</b> and add the following:

<code>
Host d1
    Hostname 104.248.57.39
Host d2
    Hostname 104.248.53.65

Host d*
    User root
</code>

Then I can use:

<code>
rex -H 'd[1..2]' -e 'say for run q(hostname)'
</code>

