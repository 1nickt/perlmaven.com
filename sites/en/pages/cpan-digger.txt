=title CPAN Digger
=timestamp 2020-10-24T12:30:01
=indexes CPAN
=status show
=author szabgab
=archive 1
=description CPAN Digger is going to be a web site collecting data about Perl-related code and helping the authors to improve that code.
=comments_disqus_enable 0
=show_related 1

=abstract start

In the CPAN Digger our goal is to understand and to help to improve the code that is CPAN.

=abstract end

A few steps:

<h2>Weekly report in the Perl Weekly</h2>

In the <a href="https://perlweekly.com/">Perl Weekly</a> newsteller I've started to share weekly <a href="https://perlweekly.com/metacpan.html">statistics from MetaCPAN</a>


<h2>Link to Public Version Control System</h2>

Locate CPAN distributions that don't include a link to their VCS (Version Control System). Suggest to the author to add one.
<a href="/how-to-add-link-to-version-control-system-of-a-cpan-distributions">How to convince Meta CPAN to show a link to the version control system of a distribution?</a>

Some people might expect a patch in e-mail, but these days very few people know how to do that. A lot more know how to send a pull-request.
It is also much better as the potential contributor can easily see the changes since the most recent release that are still only in the repository.

If it is an open source project having an accessible public version control system seems like a very sensible option. Linking to it in the meta-data of the package
makes it easy for other tools, e.g. MetaCPAN to display it.


<h2>Configure Continuous Integration (CI) for the project</h2>

Locate distributions that have VCS, but don't have CI configured. Ask the author if they are interested and send a Pull-Request to set up CI.

If <a href="http://www.cpantesters.org/">CPAN Testers</a> already test your module then why would you need a CI system on your VCS?
Well, the CI on the VCS runs <b>before</b> you release your module. It can also run on pull-requests improving the feedback loop to
the potential contributors.

If the project is hosted on GitHub there are a number of options such as GitHub Actions, Travis-CI, Appveyor, Circle-CI.

If the project is hosted on GitLab, they provide the GitLab pipelines.

If the project is hosted on Bitbucket, they provide their own pipelines.

A few articles:

<a href="/enable-travis-ci-for-continous-integration">Enable Travis-CI for Continuous Integration</a>

<a href="/using-travis-ci-and-installing-geo-ip-on-linux">Using Travis-CI and installing Geo::IP on Linux and OSX</a>

<h2>Link the the desired issue-tracking system</h2>

Help authors configure the Meta-data that links MetaCPAN to the issue-tracking system they prefer to use.

<h2>License field</h2>

<a href="/how-to-add-the-license-field-to-meta-files-on-cpan">How to add the license field to the META.yml and META.json files on CPAN?</a>

<h2>TODO</h2>
<ul>
    <li>Set up a separate site where we collect the Meta information about CPAN distributions.</li>
</ul>


