=title Dancer, the light-weight Perl web framework
=timestamp 2013-10-24T18:13:11
=indexes Dancer
=status show
=books dancer
=author szabgab
=comments_disqus_enable 1
=show_related 0

=abstract start

The beginning of a series of articles about
<a href="http://perldancer.org/">Perl Dancer</a>, the light-weight web framework of Perl.

=abstract end

<ul>
  <li><a href="/modern-web-with-perl">Modern Web with Perl</a>, a quick overview (screencast)</li>
  <li><a href="/getting-started-with-perl-dancer">Getting Started with Perl Dancer</a> - Creating an Echo application (screencast)</li>
  <li><a href="/building-a-blog-engine-using-perl-dancer">Building a blog engine using Perl Dancer (screencast)</a></li>
  <li><a href="/getting-started-with-perl-dancer-on-digital-ocean">Getting started with Perl Dancer on Digital Ocean</a></li>
</ul>

<h2>Dancer 2</h2>
<ul>
  <li><a href="/migrating-from-dancer-to-dancer2">Migrating (the Perl Maven site) from Dancer 1 to Dancer2</a></li>
  <li><a href="/hello-world-with-dancer2">Hello World with Dancer2</a> (both single file and skeleton based version)</li>
  <li><a href="/password-protecting-web-pages-in-dancer2">Password protecting web pages in Dancer 2</a></li>
  <li><a href="/counter-with-dancer-sessions">Counter with Dancer session</a></li>
  <li><a href="/uploading-files-with-dancer2">Uploading files using Dancer</a></li>
</ul>

<h2>Dancer 2 and Ajax</h2>
<ul>
  <li><a href="/ajax-and-dancer2">Ajax and Dancer</a> - Simple GET request to the same server returning JSON with "hello world" and displaying it.</li>
  <li><a href="/stand-alone-ajax-client">Stand-alone Ajax client and the Access-Control-Allow-Origin issue</a> - Simple cross-site GET request. Set Access-Control-Allow-Origin in the server.</li>
  <li><a href="/dancer2-ajax-reverse-echo">Reverse Echo with Ajax and Dancer 2</a> - An HTML form with single input field, sending the value in a GET request to the server displaying the result: the input reversed.</li>
  <li><a href="/refactoring-dancer2-using-before-hook">Refactoring Dancer 2 app, using before hook</a></li>
  <li><a href="/silencing-the-dancer-tests">Silencing the noisy Dancer tests</a></li>
  <li><a href="/add-item-to-mongodb-database">Add and retrieve items - MongoDB, Dancer and Testing!</a> - The backend part setting up MongoDB, an implementing the back-end part of inserting an item and retrieving a list of items</li>
  <li><a href="/add-and-retreive-items-jquery-ajax">Add and retrieve elements - jQuery + Ajax</a> - jQuery retrieve list and show list (building HTML using string concatenation). New HTML form, jQuery POST the text of the item</li>
  <li><a href="/deleting-item-using-ajax-with-delete-and-options">Deleting item using Ajax request with DELETE and OPTIONS</a> - Change the list displayed and include a delete button with each item. When clicked send a DELETE request. Add Access-Control-Allow-Methods header and let the server respond to OPTIONS request to fix the issues.</li>
  <li><a href="/replace-manual-html-generation-by-handlebars">Replace manual HTML generation by the use of Handlebars</a></li>
  <li><a href="/add-date-to-items-in-mongodb">Add a date stamp to the items in the database and to the HTML</a> - Add a date stamp to the items in the database. Show the list including the date.</li>
  <li><a href="/convert-list-to-table-and-jquery-tablesorting-with-date-column">Convert list to table and add jQuery tablesorting with Date column</a> - Let the user sort the data in the browser based on text or based on date.</li>
  <li><a href="/pro/keep-data-in-client-and-fetch-only-changes">Keep data in client and fetch only changes</a> - Stop fetching the full list on every action, so when the user adds a new element to the list,
 let the server only indicate that it stored the new value, but insert the value in the list kept in the client.  Same for delete.</li>

<!--
  Implement the idea of updating the list in the client only once, and letting it handle the data itself.
Then also implement a notification solution so if the data is changed on the server, the client will be notified.

-->
</ul>

<a href="/dancer2-angularjs-single-page-application">Single Page Application with Perl Dancer and AngularJS</a>

<h2>See Also</h2>
<ul>
  <li><a href="/psgi">PSGI</a> - Dancer is a PSGI based web framework. Learning about the lower layer might be useful.</li>
</ul>

<h2>Dancer Book</h2>

This book contains all the articles related to Dancer, including those that are only available to the <a href="/pro">Perl Maven Pro</a> subscribers.

<h2>
<span class="label label-lg label-success buy-button">
  <a href="/buy?product=dancer" title="Buy Dancer book for $15" alt="Buy Dancer book for $15">Buy Dancer book for $15</a>
</span>
</h2>

