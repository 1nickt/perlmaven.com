=title Dancer, the light-weight Perl web framework
=timestamp 2013-10-24T18:13:11
=indexes Dancer
=status show
=books dancer
=author szabgab
=comments_disqus_enable 1
=show_related 0

=abstract start

The beginning of a series of articles about
<a href="http://perldancer.org/">Perl Dancer</a>, the light-weight web framework of Perl.

=abstract end

<ul>
  <li><a href="/modern-web-with-perl">Modern Web with Perl</a>, a quick overview (screencast)</li>
  <li><a href="/getting-started-with-perl-dancer">Getting Started with Perl Dancer</a> - Creating an Echo application (screencast)</li>
  <li><a href="/building-a-blog-engine-using-perl-dancer">Building a blog engine using Perl Dancer (screencast)</a></li>
  <li><a href="/getting-started-with-perl-dancer-on-digital-ocean">Getting started with Perl Dancer on Digital Ocean</a></li>
</ul>

<h2>Dancer 2</h2>
<ul>
  <li><a href="/migrating-from-dancer-to-dancer2">Migrating (the Perl Maven site) from Dancer 1 to Dancer2</a></li>
  <li><a href="/hello-world-with-dancer2">Hello World with Dancer2</a></li>
  <li><a href="/password-protecting-web-pages-in-dancer2">Password protecting web pages in Dancer 2</a></li>
  <li><a href="/pro/counter-with-dancer-sessions">Counter with Dancer session</a></li>
</ul>

<h2>Dancer 2 and Ajax</h2>
<ul>
  <li><a href="/pro/ajax-and-dancer2">Ajax and Dancer</a></li>
  <li><a href="/pro/stand-alone-ajax-client">Stand-alone Ajax client and the Access-Control-Allow-Origin issue</a></li>
  <li><a href="/pro/dancer2-ajax-reverse-echo">Reverse Echo with Ajax and Dancer 2</a></li>
  <li><a href="/pro/refactoring-dancer2-using-before-hook">Refactoring Dancer 2 app, using before hook</a></li>
  <li><a href="/pro/silencing-the-dancer-tests">Silencing the noisy Dancer tests</a></li>
  <li><a href="/pro/add-item-to-mongodb-database">Add and retrieve items - MongoDB, Dancer and Testing!</a></li>
  <li><a href="/pro/add-and-retreive-items-jquery-ajax">Add and retrieve elements - jQuery + Ajax</a></li>
  <li><a href="/pro/deleting-item-using-ajax-with-delete-and-options">Deleting item using Ajax request with DELETE and OPTIONS</a></li>
  <li><a href="/pro/replace-manual-html-generation-by-handlebars">Replace manual HTML generation by the use of Handlebars</a></li>
  <li><a href="/pro/add-date-to-items-in-mongodb">Add a date stamp to the items in the database and to the HTML</a></li>

<!--
* Simple GET request to the same server returning JSON with "hello world" and displaying it
* Simple GET cross-site set Access-Control-Allow-Origin in the server
* An HTML form with single input field, sending the value in a GET request to the server displaying the result (the input reversed)
* skip this: (the backend part setting up MongoDB, an implementing the back-end part of inserting an item and retrieving a list of items)
* jQuery retreive list and show list (building HTML using string concatenation)
* new HTML form, jQuery POST the text of the item
* Change the list displayed and include a delete button with each item. When clicked send a DELETE request
   Add Access-Control-Allow-Methods header and let the server respond to OPTIONS request to fix the issues.

-->
</ul>

<h2>See Also</h2>
<ul>
  <li><a href="/psgi">PSGI</a> - Dancer is a PSGI based web framework. Learning about the lower layer might be useful.</li>
</ul>


