=title CPAN for older versions of Perl
=timestamp 2014-08-26T11:00:02
=indexes cpxxxan, CPAN
=status draft
=author szabgab
=comments_disqus_enable 1

=abstract start

When you install a module using any of the CPAN clients (eg. <a href="https://metacpan.org/pod/cpan">cpan</a>, <a href="https://metacpan.org/pod/cpanp">cpanp</a>, or
<a href="https://metacpan.org/pod/cpanm">cpanm</a>) you will get the most recent release of the requested module.

What if that does not work on your platform on your version of Perl?

=abstract end 

You can use the data collecteded by the <a href="http://cpantesters.org/">CPAN Testers</a>. For example if you visit the
page listing the <a href="http://www.cpantesters.org/distro/T/Term-ReadPassword-Win32.html">test reports of Term::ReadPassword::Win32</a>,
you will see a big table called <b>PASS Summary</b>. This table shows the most recent version
of <a href="https://metacpan.org/pod/Term::ReadPassword::Win32">Term::ReadPassword::Win32</a>, that has received
a <b>PASS</b> report on a given version of perl and a given platform.
In that table each row represents a specific version of perl and each column represents an platform.

Perl versions might include entries like 5.8.3 and 5.14.3 RC1.
Platforms will include entries like <b>Windows (Cygwin)</b>, <b>Windows (Win32)</b>, FreeBSD, GNU/Linux, SunOS/Solaris and others.

A section of the table looks like this:

<img src="/img/cpantesters_term_readpassword_win32.png" alt="CPAN Testers PASS matrix">

Some of the fields are  empty. This does not mean the module won't work on that perl/platform pair, it just means no
<b>PASS</b> reports were received for that perl/platform pair.

Once you have located the required version of the distribution, you can 
visit <a href="https://metacpan.org/">MetaCPAN</a>, locate the specific version of the module on <a href="http://www.cpan.org/">CPAN</a>,
or if it was already deleted from CPAN then on <a href="http://backpan.perl.org/">BackPan</a>.


, but finding out the appropriate version of
a module and then the appropriate version of all of its dependencies is a major pain.


The <a href="http://cpxxxan.barnyard.co.uk/">cpXXXan</a> project maintained by David Cantrell provides one of the solutions for this problem.
David maintains snapshots of CPAN with modules that will work on specific versions of Perl.

You can configure your cpan client to use one of these CPAN mirror sites and then you can use the recursive installation capabilities
of the cpan client to install the necessary modules.


 
