=title Upgrading perl on Linux or OSX - installing perl using perlbrew without being root
=timestamp 2014-01-15T07:30:01
=description Installing new version of Perl on RedHat, CentOS, Debian, Ubuntu, Fedora, or any other Linux distribution.
=indexes perlbrew
=status draft
=author szabgab
=archive 1
=comments_disqus_enable 1

=abstract start

Most Linux distribution already come pre-installed with a version of perl, but even if it is not part of the core distribution you
can install perl using <hl>yum install perl</hl> or <hl>apt-get install perl</hl> depending on your package management system.
This will give you a version of perl your vendor has built which can be several years old. In many cases using this perl is a good
choices, but sometime you'd like to <b>upgrade perl</b> and install a newer version.

You can <a href="/how-to-build-perl-from-source-code">compile Perl from source manually</a>,
or you can use <a href="http://perlbrew.pl/">Perlbrew</a> for this.

=abstract end

<h2>Upgrading Perl</h2>

Actually, we don't usually "upgrade" perl. We install a newer (or different) version of perl and leave the one
we already had on the system intact. This is usually much better than replacing that version of perl with one we build.
The one that came with the operationg system is usually referred to as <b>system perl</b> and it is there because several
parts of the operating system depend on this perl. Usually it is better to just leave it alone and install another
copy of.


There is another article explaining <a href="/how-to-build-perl-from-source-code">how to compile and install perl manually</a>.
In this article we are going to us <a href="http://perlbrew.pl/">Perlbrew</a> that hides some of the steps we had to do in the
manual process and makes it easy to manage the installation and the use of several versions of perl.

<h2>Prerequisites</h2>

While we can run perlbrew as any regular Linux/Unix/OSX user, there are a couple of things we will need to install as root.
Specifically we need to have <b>make</b> and <b>gcc</b>.

On CentOS these can be installed by running the following as <hl>root</hl> or using <hl>sudo</hl>

<code>
yum -y install make
yum -y install gcc
</code>


<h2>Perlbrew</h2>

<hl>perlbrew available</hl> - lists all the versions of perl that are available in source code format on CPAN for you to use to brew (build)

<hl>perlbrew list</hl>  - lists all the already brewed perl installations that you can use

<hl>perlbrew install</hl> -

perlbrew install -v perl-5.20.0 -Dusethreads --as perl-5.20.0_WITH_THREADS

--threads ??


While this is not a requirement, my next step is to install <a href="">App::cpanminus::reporter</a>
to make sure every time I try to install a module, the test report will be sent to <a href="">CPAN Testers</a>.

cpanm App::cpanminus::reporter


<a href="http://www.perlmonks.org/?node=953822">App::perlbrew - Compiling Perl with thread support</a>

<code lang="perl">
</code>


Example by  Shawn H Corey

<code>
perlbrew --force install perl-5.20.1 -Dusethreads -Duselargefiles -Duse64bitall -Dccflags=-DDEBIAN -Dcccdlflags=-fPIC -Darchname=x86_64-linux-gnu -Dpager=/usr/bin/sensible-pager -Doptimize=-O2
-Duseshrplib '-Dcf_by=Shawn H Corey' -Dcf_email=SHCOREY@cpan.org
</code>

