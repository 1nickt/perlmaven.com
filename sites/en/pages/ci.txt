=title CI for CPAN modules
=timestamp 2020-11-05T07:30:01
=indexes CI
=status show
=tags screencast
=author szabgab
=archive 1
=description Mini series to help CPAN authors to set up CI system for their modules
=comments_disqus_enable 0
=show_related 1

=abstract start

The goal of this mini-series is to get to the point where all the CPAN modules that use GitHub for
version control have a CI system configured.

=abstract end


<ul>
   <li>What is Continuous Integration (CI) and why is it useful?</li>
   <li>What is the difference between a CI on GitHub and the <a href="http://www.cpantesters.org/">CPAN Testers</a></li>
   <li>What Cloud-based CI systems are available for GitHub users? GitHub Actions, Travis-CI, Appveyor, CircleCI</li>
   <li>What are GitHub Actions?</li>
   <li>We'll look at a few examples on how various Perl projects use GitHub Actions</li>
   <li><a href="https://github.com/davorg/array-compare/">Array::Compare</a> of Dave Cross</li>
   <li><a href="https://github.com/briandfoy/PerlPowerTools">Perl Power Tools</a> of brian d foy</li>
   <li><a href="https://github.com/graphviz-perl/GraphViz2/">GraphViz2</a> of Ron Savage and Ed J</li>
   <li><a href="https://github.com/Perl/docker-perl-tester">Docker Perl Tester</a> by Nicolas R and Olaf Alders</li>
   <li>Maybe others<a href=""></a></li>
   <li>We'll also take a look at the <a href="https://code.perlhacks.com/">CPAN Dashboard</a> Dave Cross has </li>
   <li>We'll see how to find a CPAN module that does not have CI yet. (Check out the <a href="/cpan-digger">CPAN::Digger</a> project.)</li>
   <li>How to configure GitHub Actions</li>
   <li>How to send a pull-request</li>
</ul>


<screencast file="english-perlmaven-ci.mkv" youtube="c_PgAYBnNkY" />
