=title 7 of the most useful Perl command line options
=timestamp 2013-01-17T14:45:56
=indexes -v, -e, -E, -p, -i
=status draft
=author szabgab
=comments_disqus_enable 1

=abstract start

Perl has a lot of command line options. Some of them can be used to do very useful things, others are more esoteric.
In the <a herf="/perl-tutorial">Perl tutorial</a> we alread saw how to use <a href="/perl-on-the-command-line">perl on the command line</a>,
let's now extend that list.

=abstract end

<h2>-v to get the Perl version</h2>

This options just shows the version number of the perl interpreter and the Copyright information:

<code>
$ perl -v


This is perl 5, version 20, subversion 1 (v5.20.1) built for darwin-thread-multi-2level

Copyright 1987-2014, Larry Wall

Perl may be copied only under the terms of either the Artistic License or the
GNU General Public License, which may be found in the Perl 5 source kit.

Complete documentation for Perl, including FAQ lists, should be found on
this system using "man perl" or "perldoc perl".  If you have access to the
Internet, point your browser at http://www.perl.org/, the Perl Home Page.
</code>


<h2>-V to get compiler details</h2>

Besides the version number, this command line option will tell perl to print
all the information about the Platform we are currently running on (In the following
example osname=darwin means Mac OSX.

It also provides the configuration parameters - the way our version of
<a href="/how-to-build-perl-from-source-code">perl was compiled</a>. The
same information is available via the <hl>Config</hl> module during the runtime
of our code.

The <hl>%ENV</hl> part, if available, shows the perl-related environment variables that
are currently in effect. These environment variables can bet set in the Unix/Linux
shell or the Windows Command Window, before running perl.

Finally it lists the content of <a href="http://perlmaven.com/search/@INC">>@INC</a>, that control where perl will look for modules
to load. One can <a href="/how-to-change-inc-to-find-perl-modules-in-non-standard-locations">change @INC</a> in several ways.

<code>
$ perl -V

Summary of my perl5 (revision 5 version 20 subversion 1) configuration:
   
  Platform:
    osname=darwin, osvers=13.3.0, archname=darwin-thread-multi-2level
    uname='darwin air.local 13.3.0 darwin kernel version 13.3.0: tue jun 3 21:27:35 pdt 2014; root:xnu-2422.110.17~1release_x86_64 x86_64 '
    config_args='-de -Dprefix=/Users/gabor/perl5/perlbrew/perls/perl-5.20.1_WITH_THREADS -Dusethreads -Aeval:scriptdir=/Users/gabor/perl5/perlbrew/perls/perl-5.20.1_WITH_THREADS/bin'
    hint=recommended, useposix=true, d_sigaction=define
    useithreads=define, usemultiplicity=define
    use64bitint=define, use64bitall=define, uselongdouble=undef
    usemymalloc=n, bincompat5005=undef
  Compiler:
    cc='cc', ccflags ='-fno-common -DPERL_DARWIN -fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include',
    optimize='-O3',
    cppflags='-fno-common -DPERL_DARWIN -fno-strict-aliasing -pipe -fstack-protector -I/usr/local/include'
    ccversion='', gccversion='4.2.1 Compatible Apple LLVM 5.1 (clang-503.0.40)', gccosandvers=''
    intsize=4, longsize=8, ptrsize=8, doublesize=8, byteorder=12345678
    d_longlong=define, longlongsize=8, d_longdbl=define, longdblsize=16
    ivtype='long', ivsize=8, nvtype='double', nvsize=8, Off_t='off_t', lseeksize=8
    alignbytes=8, prototype=define
  Linker and Libraries:
    ld='env MACOSX_DEPLOYMENT_TARGET=10.3 cc', ldflags =' -fstack-protector -L/usr/local/lib'
    libpth=/usr/local/lib /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../lib/clang/5.1/lib /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib /usr/lib
    libs=-lgdbm -ldbm -ldl -lm -lutil -lc
    perllibs=-ldl -lm -lutil -lc
    libc=, so=dylib, useshrplib=false, libperl=libperl.a
    gnulibc_version=''
  Dynamic Linking:
    dlsrc=dl_dlopen.xs, dlext=bundle, d_dlsymun=undef, ccdlflags=' '
    cccdlflags=' ', lddlflags=' -bundle -undefined dynamic_lookup -L/usr/local/lib -fstack-protector'


Characteristics of this binary (from libperl): 
  Compile-time options: HAS_TIMES MULTIPLICITY PERLIO_LAYERS
                        PERL_DONT_CREATE_GVSV
                        PERL_HASH_FUNC_ONE_AT_A_TIME_HARD
                        PERL_IMPLICIT_CONTEXT PERL_MALLOC_WRAP
                        PERL_NEW_COPY_ON_WRITE PERL_PRESERVE_IVUV
                        USE_64_BIT_ALL USE_64_BIT_INT USE_ITHREADS
                        USE_LARGE_FILES USE_LOCALE USE_LOCALE_COLLATE
                        USE_LOCALE_CTYPE USE_LOCALE_NUMERIC USE_PERLIO
                        USE_PERL_ATOF USE_REENTRANT_API
  Built under darwin
  Compiled at Sep 16 2014 21:55:45
  %ENV:
    PERLBREW_BASHRC_VERSION="0.63"
    PERLBREW_HOME="/Users/gabor/.perlbrew"
    PERLBREW_MANPATH="/Users/gabor/perl5/perlbrew/perls/perl-5.20.1_WITH_THREADS/man"
    PERLBREW_PATH="/Users/gabor/perl5/perlbrew/bin:/Users/gabor/perl5/perlbrew/perls/perl-5.20.1_WITH_THREADS/bin"
    PERLBREW_PERL="perl-5.20.1_WITH_THREADS"
    PERLBREW_ROOT="/Users/gabor/perl5/perlbrew"
    PERLBREW_VERSION="0.63"
  @INC:
    /Users/gabor/perl5/perlbrew/perls/perl-5.20.1_WITH_THREADS/lib/site_perl/5.20.1/darwin-thread-multi-2level
    /Users/gabor/perl5/perlbrew/perls/perl-5.20.1_WITH_THREADS/lib/site_perl/5.20.1
    /Users/gabor/perl5/perlbrew/perls/perl-5.20.1_WITH_THREADS/lib/5.20.1/darwin-thread-multi-2level
    /Users/gabor/perl5/perlbrew/perls/perl-5.20.1_WITH_THREADS/lib/5.20.1
    .
</code>

<h2>-e execute code on the command line</h2>

For one-off tasks it can be very useful to be able to run a piece of perl code without creating a file.

<code>
$ perl -e 'print "Hello World\n"'

Hello World
</code>

Please note, on MS Windows the quotes....

