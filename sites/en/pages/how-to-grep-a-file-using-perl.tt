=title How to grep a file using Perl
=timestamp 2014-01-15T07:30:01
=indexes grep, regex
=status draft
=books beginner_book
=author szabgab
=archive 1
=comments 1
=social 1

=abstract start

Perl has a <a href="/filtering-values-with-perl-grep">grep</a> function which is a generalized version of the <b>grep</b> command-line
utility available on Unix/Linux systems. This article is not about the grep function.

It is about finding certain strings in a file, just as the command-line grep does.

=abstract end

<h2>A grep-like script</h2>


This is mostly to experiment with regular expressions. The command line <b>grep</b> generally works like this:
<hl>grep [options] REGEX FILEs</hl>

The following script saved as <hl>grep.pl</hl> does not accept any options, the REGEX itself needs to be included in the script
replacing the word REGEX, and the script works on only one file. Nevertheless it can be a good toy to play with regexes.
The reason I prefere to have the REGEX inside the script and not on the command line is that regexes use all kinds of special characters
that the Unix shell might also think it knows what to do with. Therefore we would need to add quotes around the regex and maybe escape
some of the characters. In general it would require an extra effort.

<code lang="perl">
use strict;
use warnings;

my $file = shift or die "Usage: $0 filename\n";
open my $fh, '<:encoding(UTF-8)', $file or die;
while (my $line = <$fh>) {
    if ($line =~ /REGEX/) {
        print $line;
    }
}
</code>

Run the above script as <hl>perl grep.pl</hl> and it will tell you you need to pass a filename as a parameter.

<h2>How to grep for an exact match of a string in a file using Perl?</h2>

If we are looking for a line that has a string exactly what we are looking for then we probably not need to use
a regex at all. We would probably need to us the <a href="/string-functions-length-lc-uc-index-substr">index</a> function.

<code lang="perl">
    if (index $line, 'cat' >= 0) {
        print "This line has a 'cat' in it:\n";
        print $line;
    }
</code>

<code lang="perl">
</code>


