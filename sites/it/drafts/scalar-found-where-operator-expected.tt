=title Scalar found where operator expected
=timestamp 2013-02-15T01:05:06
=indexes errore di sintassi, scalar found, operator expected
=status show
=original scalar-found-where-operator-expected.tt
=books beginner_book
=author szabgab
=translator giatorta
=index 1
=archive 1
=feed 1
=comments 1
=social 1


=abstract start

Questo errore si vede davvero molto spesso ed è un po' difficile da capire.

Il fatto è che molte persone pensano agli <b>operatori numerici</b> e agli <b>operatori stringa</b>,
ma non pensano alla virgola <hl>,</hl> come a un operatore. Per loro, la terminologia del
messaggio di errore è un po' confusa.

Vediamo un paio di esempi:

=abstract end

<h2>Virgola mancante</h2>

Il codice è il seguente:

<code lang="perl">
use strict;
use warnings;

print 42 "\n";
my $name = "Foo";
</code>

e il messaggio d'errore è

<code>
String found where operator expected at ex.pl line 4, near "42 "\n""
      (Missing operator before  "\n"?)
syntax error at ex.pl line 4, near "42 "\n""
Execution of ex.pl aborted due to compilation errors.
</code>

Dice chiaramente dove si trova il problema, ma mi capita spesso di vedere persone che si affrettano
a tornare all'editor e a provare a risolvere il bug prima ancora di leggere il messaggio d'errore.
Fanno qualche modifica sperando che risolverà il problema e finiscono per ricevere
di nuovo il messaggio d'errore.

In questo caso il problema è che abbiamo dimenticato di aggiungere una virgola <hl>,</hl> dopo il numero 42.
La linea corretta sarebbe <hl>print 42, "\n";</hl>.


<h2>String found where operator expected</h2>

In this code we have left out a concatenation operator <hl>.</hl>, and we got the same error message:

<code lang="perl">
use strict;
use warnings;

my $name = "Foo"  "Bar";
</code>

<code>
String found where operator expected at ex.pl line 4, near ""Foo"  "Bar""
      (Missing operator before   "Bar"?)
syntax error at ex.pl line 54, near ""Foo"  "Bar""
Execution of ex.pl aborted due to compilation errors.
</code>

The intended code looks like this: <hl>my $name = "Foo" . "Bar";</hl>.

<h2>Number found where operator expected</h2>

<code lang="perl">
use strict;
use warnings;

my $x = 23;
my $z =  $x 19;
</code>

Generates this error message:

<code>
Number found where operator expected at ex.pl line 5, near "$x 19"
  (Missing operator before 19?)
syntax error at ex.pl line 5, near "$x 19"
Execution of ex.pl aborted due to compilation errors.
</code>

This code is probably missing an addition <hl>+</hl>, or multiplication <hl>*</hl> operator,
though that could be a repetition operator <hl>x</hl> as well.

<h2>Syntax error while comma is missing</h2>

A missing comma is not always recognized as a missing operator.
For example this code:

<code lang="perl">
use strict;
use warnings;

my %h = (
  foo => 23
  bar => 19
);
</code>

generates the following error message: <b>syntax error at ... line ..., near "bar"</b>
without any further details.

Adding a comma after the number 23 will fix the code:

<code lang="perl">
my %h = (
  foo => 23,
  bar => 19
);
</code>

I even prefer to add a comma after every pair in a hash (so in this case, after the number 19 too):

<code lang="perl">
my %h = (
  foo => 23,
  bar => 19,
);
</code>

This habit helps me to avoid this kind of syntax error most of the cases.


<h2>Scalar found where operator expected at</h2>

<code lang="perl">
use strict;
use warnings;

my $x = 23;
my $y = 19;

my $z =  $x $y;
</code>

<code>
Scalar found where operator expected at ... line 7, near "$x $y"
	(Missing operator before $y?)
syntax error at ... line 7, near "$x $y"
Execution of ... aborted due to compilation errors.
</code>

Again, there can be a numerical or a string operator between $x and $y.

<h2>Array found where operator expected</h2>

<code lang="perl">
use strict;
use warnings;

my @x = (23);
my $z =  3 @x;
</code>

<h2>What other cases do you encounter often?</h2>

Do you have other interesting cases where we get this type of syntax error?


