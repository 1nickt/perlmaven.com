=title Como adicionar vinculo al sistema de control de version de una distribucion CPAN?
=timestamp 2013-01-03T10:45:56
=indexes Perl, Perl 5, CPAN, Git, Github, SVN, Subversion, VCS, META, ExtUtils::MakeMaker, Module::Build, Module::Install, Dist::Zilla, CPAN::Meta::Spec
=status show
=author szabgab
=archive 1
=comments 1
=social 1

=abstract start

Cuando se mira en <a href="https://www.metacpan.org/"> META CPAN</a>, o en
<a href="http://search.cpan.org/"> search.cpan.org</a>,  verá que algunos módulos
tienen un enlace a Github o algún otro lugar donde hospedan su proyecto.

En search.cpan.org, es un simple enlace junto al título del <b>Repositorio</b>, en Meta CPAN
es un enlace o un pop-up bajo el título <b>Repositorio clon</b> dependiendo del tipo de
repositorio. (Github obtiene  pop-ups, repositorios privados tienden a enlaces simples).

=abstract end

Ambos sitios toman el enlace al sistema de Control de versiones de los archivos META incluidos en las distribuciones de CPAN.
META.yml o el META.json más recientes. ( sólo difieren en su formato.)

Como los META archivos generalmente se generan automáticamente cuando se suelta la distribución
por el autor, voy a mostrarte como puedes decir a los 4 sistemas de paquetes principales 
incluir el enlace del repositorio.

En los ejemplos utilizare el enlace al repositorio de <a href="https://metacpan.org/module/Task::DWIM"> Task::DWIM</a>,
que es una distribución experimental listado todos los módulos incluidos en una <a href="http://dwimperl.com/"> DWIM Perl</a>
distribución.


<h2>ExtUtils::MakeMaker</h2>

Si utilizas <a href="https://metacpan.org/module/ExtUtils::MakeMaker"> ExtUtils::MakeMaker</a> agregar lo siguiente a tu Makefile.PL
como parámetro en la función <b>WriteMakefile</b>:


<code lang="perl">
META_MERGE => {
    'meta-spec' => { version => 2 },
     resources => {
         repository => {
             type => 'git',
             url  => 'https://github.com/dwimperl/Task-DWIM.git',
             web  => 'https://github.com/dwimperl/Task-DWIM',
         },
     },
},
</code>

Si su versión de ExtUtils::MakeMaker no admite todavía esto, simplemente actualizar ExtUtils::MakeMaker.

<h2>Module::Build</h2>

Si utilizas <a href="https://metacpan.org/module/Module::Build"> Module::Build</a>, agregue lo siguiente al Build.PL,
en la llamada <b>Module::Build->new</b>:

<code lang="perl">
meta_merge => {
    resources => {
            repository => 'https://github.com/dwimperl/Task-DWIM'
    }
},
</code>


<h2>Module::Install</h2>

Si utilizas <a href="https://metacpan.org/module/Module::Install"> Module::Install</a> agregar lo siguiente a Makefile.PL:

<code lang="perl">
repository 'https://github.com/dwimperl/Task-DWIM';
</code>

<h2>Dist::Zilla</h2>

Si utilizas <a href="http://dzil.org/"> Dist::Zilla</a>, el
<a href="https://metacpan.org/module/Dist::Zilla::Plugin::Repository"> Dist::Zilla::plugin::Repository</a>
agregará automáticamente el enlace a su repositorio, aunque también se puede especificar manualmente.

<code lang="perl">
[MetaResources]
Repository.URL = https://github.com/dwimperl/Task-DWIM.git
</code>

Una versión detallada incluye más detalles como en el ejemplo siguiente. Como puedo ver, estas piezas son solamente
incluidas en el archivo META.json y no en el archivo META.yml. Para generar ese archivo, necesitará también
incluir el <a href="https://metacpan.org/module/Dist::Zilla::Plugin::MetaJSON"> MetaJSON plugin</a> de Dist::Zilla.

<code lang="perl">
[MetaResources]
Repository.web = https://github.com/dwimperl/Task-DWIM
Repository.URL = https://github.com/dwimperl/Task-DWIM.git
Repository.Type = git

[MetaJSON]
</code>


Hay otras maneras de <a href="http://www.lowlevelmanager.com/2012/05/dzil-plugins-github-vs-githubmeta.html"> añadir
los enlaces de repositorio</a> a los META archivos  cuando se utiliza Dist::Zilla.

Probablemente la más simple forma es usar el
<a href="https://metacpan.org/module/Dist::Zilla::Plugin::GithubMeta"> GithubMeta</a> plugin 
añadiendo la siguiente línea al archivo dist.ini:

<code>
[GithubMeta]
</code>

<h2>¿Por qué debo añadir este enlace?</h2>

Es simple. Es más fácil enviar parches a la versión más reciente de su módulo,
más probable que los obtendrá.

También podría haber ya hecho algunos cambios a su módulo desde la última versión.
Tal vez ya has solucionado el error que me gustaría arreglar. Si puedo ver tu repositorio podemos evitar duplicar trabajo.

<h2>Otros recursos</h2>

Si ya ha lidiado con esto, habría que agregar otros recursos también.
El <a href="https://metacpan.org/module/CPAN::Meta::Spec#resources"> CPAN META Specification </a> tiene todo lo que aparece.
Si algo no está claro, sólo pregunta.

<h2>Licencias</h2>

En otro artículo mostré <a href="/how-to-add-the-license-field-to-meta-files-on-cpan"> Cómo agregar la información de la licencia a los META archivos de distribuciones CPAN</a>.
Si tuvieras un repositorio público, sería más fácil para otros enviar ese parche también.

